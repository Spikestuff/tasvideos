@page "/Games/{gameId}/Versions/List"
@model ListModel
@{
	ViewData.SetTitle($"Versions for {Model.Versions.GameDisplayName}");
}

<h4>Game: <a asp-page="/Games/Index" asp-route-id="@Model.GameId">@Model.Versions.GameDisplayName</a></h4>
<a asp-page="Edit" permission="CatalogMovies" asp-route-gameId="@Model.GameId" class="btn btn-primary"><i class="fa fa-plus"></i> Create</a>
<hr />
<table class="table table-bordered table-striped">
	<tr>
		<th>@Html.DisplayNameFor(m => m.Versions.Versions.First().DisplayName)</th>
		<th>@Html.DisplayNameFor(m => m.Versions.Versions.First().TitleOverride)</th>
		<th>@Html.DisplayNameFor(m => m.Versions.Versions.First().Version)</th>
		<th>@Html.DisplayNameFor(m => m.Versions.Versions.First().Region)</th>
		<th>@Html.DisplayNameFor(m => m.Versions.Versions.First().VersionType)</th>
		<th>Hashes</th>
		<th>@Html.DisplayNameFor(m => m.Versions.Versions.First().SystemCode)</th>
		<th>Actions</th>
	</tr>
	@foreach (var version in Model.Versions.Versions.OrderBy(r => r.DisplayName))
	{
		<tr>
			<td>@version.DisplayName</td>
			<td>@version.TitleOverride</td>
			<td>@version.Version</td>
			<td>@version.Region</td>
			<td>@version.VersionType</td>
			<td>
				<div condition="!string.IsNullOrWhiteSpace(version.Sha1)" class="text-break">
					<b>@Html.DisplayNameFor(m => m.Versions.Versions.First().Sha1):</b> @version.Sha1
				</div>
				<div condition="!string.IsNullOrWhiteSpace(version.Md5)" class="text-break">
					<b>@Html.DisplayNameFor(m => m.Versions.Versions.First().Md5):</b> @version.Md5
				</div>
			</td>
			<td>@version.SystemCode</td>
			<td>
				<a asp-page="Edit" permission="CatalogMovies" asp-route-id="@version.Id" asp-route-gameId="@Model.GameId" class="btn btn-sm btn-primary"><i class="fa fa-pencil"></i> Edit</a>
			</td>
		</tr>
	}
</table>

